# Generated by Django 4.2.2 on 2023-07-19 17:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stocks', '0017_remove_medicaments_seuil_alerte'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation_journaliere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('societe', models.CharField(blank=True, choices=[('CARENA', 'CARENA'), ('REGIE', 'REGIE'), ('PRESTATAIRE', 'PRESTATAIRE'), ('AGENT DE BORD', 'AGENT DE BORD')], max_length=50)),
                ('matricule', models.CharField(blank=True, max_length=50, unique=True)),
                ('nom_prenoms', models.CharField(blank=True, max_length=200)),
                ('emploi_occupe', models.CharField(blank=True, max_length=100)),
                ('atelier', models.CharField(blank=True, choices=[('ADMINISTRATION', 'ADMINISTRATION'), ('BOURBON', 'BOURBON'), ('CHAUDRONNERIE', 'CHAUDRONNERIE'), ('CHARPENTE MENUISERIE', 'CHARPENTE MENUISERIE'), ('COMPTABILITE FINANCE', 'COMPTABILITE FINANCE'), ('ELECTRICITE', 'ELECTRICITE'), ('G4S', 'G4S'), ('INFORMATIQUE ET TELECOM', 'INFORMATIQUE ET TELECOM'), ('IRIS', 'IRIS'), ('MAGASIN', 'MAGASIN'), ('MACHINE OUTILS', 'MACHINE OUTILS'), ('MAINTENANCE & TRAVAUX NEUFS', 'MAINTENANCE & TRAVAUX NEUFS'), ('MANUTENTION ET LEVAGE', 'MANUTENTION ET LEVAGE'), ('MECANIQUE BRD', 'MECANIQUE BRD'), ('NAVIRE', 'NAVIRE'), ('NETTOYAGE INDUSTRIEL', 'NETTOYAGE INDUSTRIEL'), ('PEINTURE', 'PEINTURE'), ('PEINTURE ANTICORROSION', 'PEINTURE ANTICORROSION'), ('PRODUCTION', 'PRODUCTION'), ('QUALITE ENVIRONNEMENT HYGIENE', 'QUALITE ENVIRONNEMENT HYGIENE'), ('QUALITE ENVIRONNEMENT HYGIENE ET SECURITE', 'QUALITE ENVIRONNEMENT HYGIENE ET SECURITE'), ('QHSE', 'QHSE'), ('RESSOURCES HUMAINES', 'RESSOURCES HUMAINES'), ('SAUVETAGE', 'SAUVETAGE'), ('SUPPLY CHAIN', 'SUPPLY CHAIN'), ('TUYAUTERIE', 'TUYAUTERIE'), ('WICS', 'WICS')], max_length=100)),
                ('age', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Consultation_VMA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('societe', models.CharField(blank=True, choices=[('CARENA', 'CARENA'), ('REGIE', 'REGIE'), ('PRESTATAIRE', 'PRESTATAIRE'), ('AGENT DE BORD', 'AGENT DE BORD')], max_length=50)),
                ('emploi_occupe', models.CharField(blank=True, max_length=100)),
                ('atelier', models.CharField(blank=True, choices=[('ADMINISTRATION', 'ADMINISTRATION'), ('BOURBON', 'BOURBON'), ('CHAUDRONNERIE', 'CHAUDRONNERIE'), ('CHARPENTE MENUISERIE', 'CHARPENTE MENUISERIE'), ('COMPTABILITE FINANCE', 'COMPTABILITE FINANCE'), ('ELECTRICITE', 'ELECTRICITE'), ('G4S', 'G4S'), ('INFORMATIQUE ET TELECOM', 'INFORMATIQUE ET TELECOM'), ('IRIS', 'IRIS'), ('MAGASIN', 'MAGASIN'), ('MACHINE OUTILS', 'MACHINE OUTILS'), ('MAINTENANCE & TRAVAUX NEUFS', 'MAINTENANCE & TRAVAUX NEUFS'), ('MANUTENTION ET LEVAGE', 'MANUTENTION ET LEVAGE'), ('MECANIQUE BRD', 'MECANIQUE BRD'), ('NAVIRE', 'NAVIRE'), ('NETTOYAGE INDUSTRIEL', 'NETTOYAGE INDUSTRIEL'), ('PEINTURE', 'PEINTURE'), ('PEINTURE ANTICORROSION', 'PEINTURE ANTICORROSION'), ('PRODUCTION', 'PRODUCTION'), ('QUALITE ENVIRONNEMENT HYGIENE', 'QUALITE ENVIRONNEMENT HYGIENE'), ('QUALITE ENVIRONNEMENT HYGIENE ET SECURITE', 'QUALITE ENVIRONNEMENT HYGIENE ET SECURITE'), ('QHSE', 'QHSE'), ('RESSOURCES HUMAINES', 'RESSOURCES HUMAINES'), ('SAUVETAGE', 'SAUVETAGE'), ('SUPPLY CHAIN', 'SUPPLY CHAIN'), ('TUYAUTERIE', 'TUYAUTERIE'), ('WICS', 'WICS')], max_length=100)),
                ('age', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Periodic_Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('nom_prenoms', models.CharField(max_length=200)),
                ('consultation_date', models.DateField(auto_now_add=True)),
                ('pathology', models.CharField(choices=[('Cardiologie', 'Cardiologie'), ('Dermatologie', 'Dermatologie'), ('Digestive', 'Digestive'), ('Endocrinienne', 'Endocrinienne'), ('Endocrinologie', 'Endocrinologie'), ('Gastro-enterologie', 'Gastro-entérologie'), ('Gynecologie', 'Gynécologie'), ('Hematologie', 'Hématologie'), ('Maladies Infectieuses', 'Maladies Infectieuses'), ('Nephrologie', 'Néphrologie'), ('ORL', 'ORL'), ('Ophtalmologie', 'Ophtalmologie'), ('Pneumologie', 'Pneumologie'), ('Psychiatrie', 'Psychiatrie'), ('Rhumatologie', 'Rhumatologie'), ('Stomatologie', 'Stomatologie'), ('Traumatologie', 'Traumatologie'), ('Urologie', 'Urologie'), ('Autres', 'Autres')], max_length=100)),
                ('other_pathology', models.CharField(blank=True, max_length=100)),
                ('exam', models.CharField(choices=[('Audiometrie', 'Audiometrie'), ('Examen ophtalmologique', 'Examen ophtalmologique'), ('NFS, glycenie, proteinurie, glucosurie', 'NFS, glycenie, proteinurie, glucosurie'), ('Numeration formule sanguine', 'Numération formule sanguine'), ('Radiographie des sinus-blondeau', 'Radiographie des sinus-blondeau'), ('Radiographie pulmonaire', 'Radiographie pulmonaire'), ('Spirometrie', 'Spirometrie'), ('Transaminases, uree et creatine', 'Transaminases, urée et créatine'), ('Autres', 'Autres')], max_length=100)),
                ('other_exam', models.CharField(blank=True, max_length=100)),
                ('risks', models.CharField(choices=[('Nuisance Sonore', 'Nuisance Sonore'), ('Risques Lies Aux Fumees et Vapeurs Toxiques', 'Risques Lies Aux Fumees et Vapeurs TOXIQUES'), ('Risques Lies Aux Poussieres de Bois', 'Risques Lies Aux Poussieres de Bois'), ('Risques Lies Aux Poussieres de Sable', 'Risques Lies Aux Poussieres de Sable'), ('Risques Lies Aux Peintures (Diluants, Solvants) et Vernis', 'RISQUE LIE Aux Peintures (Diluants, Solvants) et Vernis'), ('Risques Lies Aux Emanations de Debris de Metaux', 'Risques Lies Aux Emanations de Debris de Metaux'), ('Risques Lies a la Plongee (Profondeur moins de 15 metres)', 'Risques Lies a la Plongee (Profondeur moins de 15 metres)'), ('Risques Lies Aux Huiles Usagees et degraissants (Solvants)', 'Risques Lies Aux Huiles Usagees et degraissants (Solvants)')], max_length=100)),
                ('reasons', models.CharField(choices=[('Surveillance médicale annuelle', 'Surveillance médicale annuelle'), ('Surveillance médicale particuliere/specifique', 'Surveillance médicale particuliere/specifique'), ('Surveillance médicale occasionnelle', 'Surveillance médicale occasionnelle')], max_length=100)),
                ('aptitude', models.CharField(choices=[('APTE', 'APTE'), ('APTE : avec amenagement', 'APTE : avec amenagement'), ('APTE : avec recommendation', 'APTE : avec recommendation'), ('INAPTE : definitif', 'INAPTE : definitif'), ('INAPTE : temporaire', 'INAPTE : temporaire'), ('INAPTE: au poste mais apte a un autre poste', 'INAPTE: au poste mais apte a un autre poste')], max_length=100)),
                ('break_day', models.PositiveBigIntegerField(blank=True, null=True)),
                ('evacuation', models.BooleanField(default=False)),
                ('observations', models.TextField(blank=True)),
                ('worker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.travailleurs')),
            ],
            options={
                'verbose_name_plural': 'Consultations Périodiques',
                'ordering': ['consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='Day_Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('nom_prenoms', models.CharField(max_length=200)),
                ('consultation_date', models.DateField(auto_now_add=True)),
                ('pathology', models.CharField(choices=[('Cardiologie', 'Cardiologie'), ('Dermatologie', 'Dermatologie'), ('Digestive', 'Digestive'), ('Endocrinienne', 'Endocrinienne'), ('Endocrinologie', 'Endocrinologie'), ('Gastro-entérologie', 'Gastro-entérologie'), ('Gynécologie', 'Gynécologie'), ('Hématologie', 'Hématologie'), ('Maladies Infectieuses', 'Maladies Infectieuses'), ('Néphrologie', 'Néphrologie'), ('ORL', 'ORL'), ('Ophtalmologie', 'Ophtalmologie'), ('Pneumologie', 'Pneumologie'), ('Psychiatrie', 'Psychiatrie'), ('Rhumatologie', 'Rhumatologie'), ('Stomatologie', 'Stomatologie'), ('Traumatologie', 'Traumatologie'), ('Urologie', 'Urologie'), ('Autres', 'Autres')], max_length=100)),
                ('other_pathology', models.CharField(blank=True, max_length=100)),
                ('accident', models.CharField(choices=[('Accident reel', 'Accident reel'), ('Accident du trajet', 'Accident du trajet'), ('Accident a la declaration dans le delai de carence de la CNPS', 'Accident à la déclaration dans le délai de carence de la CNPS')], max_length=100)),
                ('stop', models.CharField(choices=[('Avec arret', 'Avec arrêt'), ('Sans arret', 'Sans arrêt')], max_length=100)),
                ('lesion', models.CharField(choices=[('Amputation', 'Amputation'), ('Atteinte oculaire', 'Atteinte oculaire'), ('Contusion', 'Contusion'), ('Entorse', 'Entorse'), ('Fracture', 'Fracture'), ('Plaie', 'Plaie'), ('Plaie Traumatique', 'Plaie Traumatique'), ('Autres', 'Autres')], max_length=100)),
                ('other_lesion', models.CharField(blank=True, max_length=100)),
                ('siege', models.CharField(choices=[('Membre superieur', 'Membre supérieur'), ('Membre inferieur', 'Membre inférieur'), ('Tete', 'Tête'), ('Thorax', 'Thorax'), ('Autres', 'Autres')], max_length=100)),
                ('other_siege', models.CharField(blank=True, max_length=100)),
                ('reasons', models.CharField(choices=[('Accidents', 'Accidents'), ('Consultation generale', 'Consultation générale'), ("Visites d'embauche", "Visites d'embauche"), ('Visites de reprise de travail apres maladie', 'Visites de reprise de travail après maladie'), ('Visites de reprise de travail après maternité', 'Visites de reprise de travail après maternité'), ('Visites de reprise de travail après congé annuel', 'Visites de reprise de travail après congé annuel'), ('Visites de reprise de travail après accident du travail', 'Visites de reprise de travail après accident du travail'), ('Visites de reprise de travail après maladie professionnelle', 'Visites de reprise de travail après maladie professionnelle'), ('Visites occasionnelle', 'Visites occasionnelle')], max_length=100)),
                ('aptitude', models.CharField(choices=[('APTE', 'APTE'), ('APTE : avec amenagement', 'APTE : avec amenagement'), ('APTE : avec recommendation', 'APTE : avec recommendation'), ('INAPTE : definitif', 'INAPTE : definitif'), ('INAPTE : temporaire', 'INAPTE : temporaire'), ('INAPTE: au poste mais apte a un autre poste', 'INAPTE: au poste mais apte a un autre poste')], max_length=100)),
                ('break_day', models.PositiveBigIntegerField(blank=True, null=True)),
                ('evacuation', models.BooleanField(default=False)),
                ('observations', models.TextField(blank=True)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.travailleurs')),
            ],
            options={
                'ordering': ['consultation_date'],
            },
        ),
    ]
